# Don't forget to run 
# `docker compose up` with `ENVIRONMENT=base` set in `.env`
# the first time you run this project!"

services:
  app:
    container_name: "spring-auth-${ENVIRONMENT}"
    build:
      context: .
      dockerfile: Dockerfile
      target: "${ENVIRONMENT}" # Use the environment variable to target the desired stage
    volumes:
      - ./src/asciidoc:/app/target/generated-snippets
      - ./docs:/app/target/generated-snippets-html
      - ./target:/app/target
    environment:
      # Pass environment variables to the container and the Spring Boot app
      SPRING_PROFILES_ACTIVE: "${ENVIRONMENT}"
      PORT: "${PORT}"
      # Prod database SPRING_DATASOURCE_URL has to be set in the production environment
      DEV_SPRING_DATASOURCE_URL: "${DEV_SPRING_DATASOURCE_URL}"
      TEST_SPRING_DATASOURCE_URL: "${TEST_SPRING_DATASOURCE_URL}"
      SPRING_DATASOURCE_USERNAME: "${DB_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - db
    networks:
      - spring_network

  db:
    container_name: "spring-auth-mariadb"
    image: mariadb:11.4
    environment:
      MARIADB_ROOT_PASSWORD: "${DB_PASSWORD}"
      MARIADB_DATABASE: "${ENVIRONMENT}_db"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  spring_network:
    driver: bridge
